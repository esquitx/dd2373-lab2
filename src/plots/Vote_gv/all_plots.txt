METHOD: init
digraph finite_state_machine {
	rankdir=LR
	size="10,10"
	node [shape = point]; point_q0
	node [shape = doublecircle]; c34m3p2r; 
	node [shape=circle];
	point_q0 -> [c34m3p0]
	c34m3p0 -> c34m3p1 [ label = "eps" ];
	c34m3p2 -> c34m3p2r [ label = "eps" ];
	c34m3p1 -> c34m3p2 [ label = "java-lang-Object-_init" ];
}

METHOD: submit
digraph finite_state_machine {
	rankdir=LR
	size="10,10"
	node [shape = point]; point_q0
	node [shape = doublecircle]; c34m5p13r; 
	node [shape=circle];
	point_q0 -> [c34m5p0]
	c34m5p7 -> c34m5p8 [ label = "eps" ];
	c34m5p4 -> c34m5p5 [ label = "eps" ];
	c34m5p5 -> c34m5p6 [ label = "eps" ];
	c34m5p13 -> c34m5p13r [ label = "eps" ];
	c34m5p0 -> c34m5p1 [ label = "eps" ];
	c34m5p3 -> c34m5p4 [ label = "eps" ];
	c34m5p11 -> c34m5p12 [ label = "eps" ];
	c34m5p2 -> c34m5p3 [ label = "eps" ];
	c34m5p1 -> c34m5p2 [ label = "eps" ];
	c34m5p9 -> c34m5p10 [ label = "eps" ];
	c34m5p8 -> c34m5p9 [ label = "eps" ];
	c34m5p10 -> c34m5p11 [ label = "eps" ];
	c34m5p6 -> c34m5p7 [ label = "java-lang-Integer-valueOf" ];
	c34m5p12 -> c34m5p13 [ label = "java-io-PrintStream-printf" ];
}

METHOD: getVote
digraph finite_state_machine {
	rankdir=LR
	size="10,10"
	node [shape = point]; point_q0
	node [shape = doublecircle]; c34m4p11r; c34m4p12r; 
	node [shape=circle];
	point_q0 -> [c34m4p0]
	c34m4p11 -> c34m4p11r [ label = "eps" ];
	c34m4p0 -> c34m4p1 [ label = "eps" ];
	c34m4p8 -> c34m4p9 [ label = "eps" ];
	c34m4p12 -> c34m4p12r [ label = "eps" ];
	c34m4p1 -> c34m4p2 [ label = "eps" ];
	c34m4p10 -> c34m4p12 [ label = "eps" ];
	c34m4p10 -> c34m4p11 [ label = "eps" ];
	c34m4p7 -> c34m4p8 [ label = "eps" ];
	c34m4p2 -> c34m4p3 [ label = "eps" ];
	c34m4p5 -> c34m4p6 [ label = "eps" ];
	c34m4p6 -> c34m4p7 [ label = "java-io-BufferedReader-read" ];
	c34m4p4 -> c34m4p5 [ label = "java-io-BufferedReader-_init" ];
	c34m4p3 -> c34m4p4 [ label = "java-io-InputStreamReader-_init" ];
	c34m4p9 -> c34m4p10 [ label = "validate" ];
}

METHOD: main
digraph finite_state_machine {
	rankdir=LR
	size="10,10"
	node [shape = point]; point_q0
	node [shape = doublecircle]; c34m1p13r; 
	node [shape=circle];
	point_q0 -> [c34m1p0]
	c34m1p1 -> c34m1p2 [ label = "init" ];
	c34m1p7 -> c34m1p8 [ label = "eps" ];
	c34m1p2 -> c34m1p3 [ label = "eps" ];
	c34m1p3 -> c34m1p4 [ label = "eps" ];
	c34m1p5 -> c34m1p13 [ label = "eps" ];
	c34m1p0 -> c34m1p1 [ label = "eps" ];
	c34m1p9 -> c34m1p10 [ label = "eps" ];
	c34m1p13 -> c34m1p13r [ label = "eps" ];
	c34m1p11 -> c34m1p12 [ label = "eps" ];
	c34m1p8 -> c34m1p9 [ label = "eps" ];
	c34m1p6 -> c34m1p7 [ label = "eps" ];
	c34m1p0 -> c34m1p6 [ label = "eps" ];
	c34m1p12 -> c34m1p13 [ label = "java-io-PrintStream-print" ];
	c34m1p4 -> c34m1p5 [ label = "vote" ];
	c34m1p10 -> c34m1p11 [ label = "java-lang-Throwable-toString" ];
}

METHOD: vote
digraph finite_state_machine {
	rankdir=LR
	size="10,10"
	node [shape = point]; point_q0
	node [shape = doublecircle]; c34m6p8r; 
	node [shape=circle];
	point_q0 -> [c34m6p0]
	c34m6p4 -> c34m6p5 [ label = "submit" ];
	c34m6p1 -> c34m6p2 [ label = "getVote" ];
	c34m6p8 -> c34m6p8r [ label = "eps" ];
	c34m6p6 -> c34m6p7 [ label = "eps" ];
	c34m6p2 -> c34m6p3 [ label = "eps" ];
	c34m6p5 -> c34m6p8 [ label = "eps" ];
	c34m6p0 -> c34m6p1 [ label = "eps" ];
	c34m6p3 -> c34m6p4 [ label = "eps" ];
	c34m6p2 -> c34m6p6 [ label = "eps" ];
	c34m6p7 -> c34m6p8 [ label = "vote" ];
}

METHOD: validate
digraph finite_state_machine {
	rankdir=LR
	size="10,10"
	node [shape = point]; point_q0
	node [shape = doublecircle]; c34m10p5r; 
	node [shape=circle];
	point_q0 -> [c34m10p0]
	c34m10p4 -> c34m10p5 [ label = "eps" ];
	c34m10p3 -> c34m10p5 [ label = "eps" ];
	c34m10p1 -> c34m10p2 [ label = "eps" ];
	c34m10p5 -> c34m10p5r [ label = "eps" ];
	c34m10p0 -> c34m10p1 [ label = "eps" ];
	c34m10p0 -> c34m10p4 [ label = "eps" ];
	c34m10p2 -> c34m10p3 [ label = "eps" ];
	c34m10p1 -> c34m10p4 [ label = "eps" ];
}
